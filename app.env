################################################################################
# specify environment variables                                                #
# using an env file to be portable between windows and unix                    #
################################################################################

#
# APPNAME - the name you want the user to use to invoke it
#           Also all the artifacts if your application will be in public/APPNAME directory
#           For example if APPNAME is rafdemos then public/rafdemos will have all the files
#           associated with your app.
#
APPNAME=optmodel

#
# location of the application resources(html, shared resources etc...)
# each APPNAME corresponds to a directory in this location
# if current directory then set APPLOC to .
#
APPLOC=./public

#
# Specify the html that is the entry point to your app.
# A good standard is to use index.html
#
APPENTRY=logon.html

#
# APPHOST - Leave this as specified below
# The service will use the current hostname
#
APPHOST=localhost

#
# The port on which this app is expected to run
#
APPPORT=5006

#
# You can turn on/off OAUTH2 base authentication (YES|NO)

#
OAUTH2=NO

#
# If you want the server to act like a proxy server to the Viya Server (YES|NO)
#
PROXYSERVER=NO

#
# is SAS server SSL enabled
#
SAS_SSL_ENABLED=NO

#
# When running with no proxy these are ignored.
#
#
Jmake this generic from the app.env file:
# your Viya Server
# ex: viya.openstack.sas.com:7980

#
# Your app specific environment variables
#


VIYA_SERVER=<your viya server (ex: http://myviya.com)
AUTHFLOW=implicit
CLIENTID=<your clientid ex: blogger>
REDIRECT=index.html 


#
# template REPORT information
#

TEMPLATECASLIB=Public
TEMPLATETABLE=OUTPUT_SOL
TEMPLATEREPORT=optModel1


#
# COST TABLE
#
COSTNAME=INPUT_COST
COSTCASLIB=Public

#
# caslib to use work and results
#

WORKCASLIB=CASUSER
WORKTABLE=OUTPUT_SOL
WORKREPORT=latest





